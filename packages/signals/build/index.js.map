{
  "version": 3,
  "sources": ["../library/index.ts"],
  "sourcesContent": [
    "type UnionToIntersection<U> = (U extends any ? (x: U) => void : never) extends (\n\tx: infer I,\n) => void\n\t? I\n\t: never;\n\ntype IsUnion<T> = [T] extends [UnionToIntersection<T>] ? false : true;\n\ntype Subscriber = () => void;\ntype Unsubscriber = () => void;\ntype UnknownObject = Record<string | symbol, unknown>;\n\nconst $value = Symbol(\"value\");\nconst $subscriptions = Symbol(\"subscriptions\");\nconst $fields = Symbol(\"fields\");\n\ntype Context = Set<Reactive<any>>;\nconst $scope = new Array<Context>();\nlet $capturer: Context | undefined;\n\nconst queueMicrotask =\n\tglobalThis.queueMicrotask ??\n\t((callback: () => any) => Promise.resolve().then(callback));\n\nconst tasks = new Set<() => void>();\n\nconst queue = (callback: () => void) => {\n\ttasks.add(callback);\n\tif (tasks.size === 1) {\n\t\tqueueMicrotask(() => {\n\t\t\tfor (const task of tasks) {\n\t\t\t\ttask();\n\t\t\t}\n\t\t\ttasks.clear();\n\t\t});\n\t}\n};\n\nconst $context = {\n\tadd(variable: Reactive<any>) {\n\t\t$capturer?.add(variable);\n\t},\n\tpush: (context: Context = new Set()) => {\n\t\t$scope.push(context);\n\t\t$capturer = context;\n\t},\n\tpop: () => {\n\t\tconst result = $scope.pop() ?? new Set();\n\t\t$capturer = $scope[$scope.length - 1];\n\t\treturn result;\n\t},\n};\n\nexport type Reactive<Value> = Value & {\n\t[$value]: Value;\n\t[$subscriptions]: Array<Subscriber>;\n};\n\nexport function isReactive<T>(value: T): value is Reactive<T> {\n\treturn $value in (value as any);\n}\n\nexport function isReactiveObject<T>(\n\tvalue: Reactive<T> | T,\n): value is ReactiveObject<T> {\n\treturn $fields in (value as any);\n}\n\ntype BroadType<T> = IsUnion<T> extends true\n\t? T\n\t: T extends number\n\t\t? number\n\t\t: T extends string\n\t\t\t? string\n\t\t\t: T extends boolean\n\t\t\t\t? boolean\n\t\t\t\t: T extends bigint\n\t\t\t\t\t? bigint\n\t\t\t\t\t: T extends symbol\n\t\t\t\t\t\t? symbol\n\t\t\t\t\t\t: T;\n\nexport class ReactivePrimitive<Value> {\n\t[$value]: Value;\n\t[$subscriptions] = new Array<Subscriber>();\n\n\tconstructor(value: Value) {\n\t\tthis[$value] = value;\n\t}\n\n\tvalueOf(): Value {\n\t\treturn this[$value];\n\t}\n}\n\nexport type ReactiveObject<Value> = Reactive<Value> & {\n\t[$fields]: Record<string | symbol, Reactive<any>>;\n};\n\nexport function get<T>(variable: Reactive<T>): T {\n\tif (isReactive(variable)) {\n\t\t$context.add(variable);\n\t\treturn variable[$value];\n\t} else {\n\t\treturn variable;\n\t}\n}\n\nexport function set<T>(variable: Reactive<T>, newValue: T): Reactive<T> {\n\tif (newValue !== variable[$value]) {\n\t\tconst oldValue = (variable[$value] = newValue);\n\t\tvariable[$value] = newValue;\n\n\t\tif (isReactiveObject(variable)) {\n\t\t\t// in case of object, we reset the cached fields\n\t\t\tvariable[$fields] = {};\n\t\t}\n\n\t\tfor (const subscription of variable[$subscriptions]) {\n\t\t\tqueue(subscription);\n\t\t}\n\t}\n\treturn variable;\n}\n\nexport function watch<T>(\n\tvariables: Reactive<T> | Array<Reactive<T>> | Set<Reactive<T>>,\n\tcallback: Subscriber,\n): () => void {\n\tif (Array.isArray(variables) || variables instanceof Set) {\n\t\tconst unsubscribers = new Array<Unsubscriber>();\n\t\tfor (const variable of variables) {\n\t\t\tunsubscribers.push(watch(variable, callback));\n\t\t}\n\t\treturn () => unsubscribers.forEach((unsubscribe) => unsubscribe());\n\t} else {\n\t\tsubscribe(variables, callback);\n\t\treturn () => unsubscribe(variables, callback);\n\t}\n}\n\nexport function subscribe<T>(\n\tvariable: Reactive<T>,\n\tcallback: Subscriber,\n): void {\n\tvariable[$subscriptions].push(callback);\n}\n\nexport function unsubscribe<T>(\n\tvariable: Reactive<T>,\n\tcallback: Subscriber,\n): boolean {\n\tconst index = variable[$subscriptions].indexOf(callback);\n\tif (index !== -1) {\n\t\tvariable[$subscriptions].splice(index, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const isObject = (value: any): value is UnknownObject =>\n\ttypeof value === \"object\" && value !== null;\n\nexport function reactive<Value>(value: Value): Reactive<BroadType<Value>> {\n\tif (!isObject(value)) {\n\t\treturn new ReactivePrimitive(value) as any;\n\t}\n\n\tconst reactiveObject = Object.create(value) as ReactiveObject<any>;\n\treactiveObject[$fields] = {};\n\treactiveObject[$subscriptions] = new Array<Subscriber>();\n\treactiveObject[$value] = value;\n\n\treturn new Proxy(reactiveObject, {\n\t\tget(target, key) {\n\t\t\treturn (target[$fields][key] ??= reactive(target[$value][key]));\n\t\t},\n\t\tset(target, key, newValue) {\n\t\t\tconst property = (target[$fields][key] ??= reactive(target[$value][key]));\n\t\t\tset(property, newValue);\n\t\t\treturn true;\n\t\t},\n\t}) as any;\n}\n\nexport function derived<T>(callback: () => T): Reactive<T> {\n\tconst derivedSignal = reactive(undefined) as Reactive<T>;\n\teffect(() => set(derivedSignal, callback()));\n\treturn derivedSignal;\n}\n\nexport function effect(callback: () => any): void {\n\t// run the callback and capture the signals\n\t$context.push();\n\tcallback();\n\tconst capturedSignals = $context.pop();\n\n\tfor (const signal of capturedSignals) {\n\t\tsubscribe(signal, runCallback);\n\t}\n\n\tfunction runCallback() {\n\t\t$context.push();\n\t\tcallback();\n\t\tconst newCapturedSignals = $context.pop();\n\n\t\tfor (const signal of capturedSignals) {\n\t\t\tif (!newCapturedSignals.has(signal)) {\n\t\t\t\tunsubscribe(signal, runCallback);\n\t\t\t\tcapturedSignals.delete(signal);\n\t\t\t}\n\t\t}\n\n\t\tfor (const signal of newCapturedSignals) {\n\t\t\tif (!capturedSignals.has(signal)) {\n\t\t\t\tcapturedSignals.add(signal);\n\t\t\t\tsubscribe(signal, runCallback);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n\t// React [63 characters]\n\tconst [number, setNumber] = useState(0)\n\n\tsetNumber(number + 1)\n\n\t// Solid [71 characters]\n\tconst [number, setNumber] = createSignal(0)\n\n\tsetNumber(number() + 1)\n\n\t// Vue [38 characters]\n\tconst number = ref(0)\n\n\tnumber.value++\n\n\t// Svelte [33 characters]\n\tlet number = $state(0)\n\n\tnumber++\n\n\t// Bunny 1 [52 characters]\n\tconst number = reactive(0)\n\n\tset(number, number + 1)\n\n\t// Bunny 2 [51 characters]\n\tconst number = reactive(0)\n\n\tnumber(number() + 1)\n\n\t// Bunny 3 [59 characters]\n\tconst number = reactive(0)\n\n\tnumber.set(number.get() + 1)\n */\n"
  ],
  "mappings": "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",
  "debugId": "F45DD8792428DE4364756E2164756E21",
  "names": []
}